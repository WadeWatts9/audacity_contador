# ========================================
# COMANDOS PARA EJECUTAR EN EL SERVIDOR
# ========================================
# Copia y pega estos comandos uno por uno en tu terminal SSH

# 1. Conectarse al servidor (ejecutar desde tu PC)
# ssh usuario@audacity.alancanto.net

# 2. Navegar al directorio de la aplicaci√≥n
cd /public_html/audacity

# 3. Crear backup de los archivos actuales
cp .htaccess .htaccess.backup.$(date +%Y%m%d_%H%M%S)
cp app.js app.js.backup.$(date +%Y%m%d_%H%M%S)

# 4. Actualizar el archivo .htaccess
cat > .htaccess << 'EOF'
RewriteEngine On

# Redirigir todas las peticiones a la aplicaci√≥n Node.js
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ http://localhost:3000/$1 [P,L]

# Configuraci√≥n para WebSockets
RewriteCond %{HTTP:Upgrade} websocket [NC]
RewriteCond %{HTTP:Connection} upgrade [NC]
RewriteRule ^(.*)$ ws://localhost:3000/$1 [P,L]

# Forzar el uso del dominio correcto en la barra de direcciones
# Redirigir cualquier IP o dominio incorrecto al dominio correcto
RewriteCond %{HTTP_HOST} !^audacity\.alancanto\.net$ [NC]
RewriteCond %{HTTP_HOST} !^www\.audacity\.alancanto\.net$ [NC]
RewriteCond %{HTTP_HOST} !^localhost$ [NC]
RewriteCond %{HTTP_HOST} !^127\.0\.0\.1$ [NC]
RewriteRule ^(.*)$ https://audacity.alancanto.net/$1 [R=301,L]

# Redirigir HTTP a HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Headers para CORS
Header always set Access-Control-Allow-Origin "*"
Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
Header always set Access-Control-Allow-Headers "Content-Type, Authorization"

# Configuraci√≥n de cach√© para archivos est√°ticos
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg)$">
    ExpiresActive On
    ExpiresDefault "access plus 1 month"
    Header set Cache-Control "public, max-age=2592000"
</FilesMatch>

# Configuraci√≥n de seguridad
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options DENY
Header always set X-XSS-Protection "1; mode=block"
EOF

# 5. Actualizar el archivo app.js
cat > app.js << 'EOF'
const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const path = require('path');

const app = express();
const server = http.createServer(app);
const io = socketIo(server, {
    cors: {
        origin: "*",
        methods: ["GET", "POST"]
    }
});

// Middleware para forzar el uso del dominio correcto
app.use((req, res, next) => {
    // Si la petici√≥n viene de una IP o dominio incorrecto, redirigir al dominio correcto
    if (req.hostname !== 'audacity.alancanto.net' && req.hostname !== 'www.audacity.alancanto.net') {
        return res.redirect(301, `https://audacity.alancanto.net${req.originalUrl}`);
    }
    next();
});

const PORT = process.env.PORT || 3000;

// Servir archivos est√°ticos
app.use(express.static(path.join(__dirname)));

// Ruta principal - Redirigir a la versi√≥n de tiempo real
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index-realtime.html'));
});

// Almacenar saldos en memoria (en producci√≥n usar base de datos)
let balances = {
    bank: 0,
    gallo: 10000,
    leon: 10000,
    perro: 10000,
    mano: 10000,
    estrella: 10000
};

// Almacenar usuarios conectados
const connectedUsers = new Map();

// Manejar conexiones WebSocket
io.on('connection', (socket) => {
    console.log('Usuario conectado:', socket.id);

    // Enviar saldos actuales al usuario que se conecta
    socket.emit('balances_update', balances);

    // Manejar login
    socket.on('user_login', (userData) => {
        connectedUsers.set(socket.id, userData);
        socket.broadcast.emit('user_connected', userData);
        console.log(`Usuario ${userData.username} conectado`);
    });

    // Manejar actualizaci√≥n de saldos
    socket.on('update_balance', (data) => {
        const { counter, amount, operation } = data;
        
        if (operation === 'add') {
            balances[counter] += amount;
        } else if (operation === 'subtract') {
            balances[counter] = Math.max(0, balances[counter] - amount);
        } else if (operation === 'set') {
            balances[counter] = amount;
        } else if (operation === 'transfer') {
            balances[data.fromCounter] -= amount;
            balances[data.toCounter] += amount;
        } else if (operation === 'swap') {
            const temp = balances[data.fromCounter];
            balances[data.fromCounter] = balances[data.toCounter];
            balances[data.toCounter] = temp;
        } else if (operation === 'reset') {
            balances = {
                bank: 0,
                gallo: 10000,
                leon: 10000,
                perro: 10000,
                mano: 10000,
                estrella: 10000
            };
        }

        // Enviar actualizaci√≥n a todos los clientes
        io.emit('balances_update', balances);
        console.log('Saldos actualizados:', balances);
    });

    // Manejar desconexi√≥n
    socket.on('disconnect', () => {
        const userData = connectedUsers.get(socket.id);
        if (userData) {
            socket.broadcast.emit('user_disconnected', userData);
            connectedUsers.delete(socket.id);
            console.log(`Usuario ${userData.username} desconectado`);
        }
    });
});

// Iniciar servidor
server.listen(PORT, () => {
    console.log(`Servidor AUDACITY ejecut√°ndose en puerto ${PORT}`);
    console.log(`Accede a: http://localhost:${PORT}`);
});

module.exports = { app, server, io };
EOF

# 6. Habilitar m√≥dulos de Apache necesarios
sudo a2enmod rewrite
sudo a2enmod headers
sudo a2enmod proxy
sudo a2enmod proxy_http
sudo a2enmod proxy_wstunnel

# 7. Reiniciar Apache
sudo systemctl restart apache2

# 8. Verificar que Apache est√© funcionando
sudo systemctl status apache2

# 9. Probar la configuraci√≥n de Apache
sudo apache2ctl configtest

# 10. Reiniciar la aplicaci√≥n Node.js (si est√° corriendo con PM2)
pm2 restart audacity || pm2 start app.js --name audacity

# 11. Verificar que la aplicaci√≥n est√© funcionando
pm2 status

# 12. Probar la redirecci√≥n
curl -I http://audacity.alancanto.net

# 13. Verificar logs
tail -f /var/log/apache2/error.log

# ========================================
# VERIFICACI√ìN FINAL
# ========================================
echo "‚úÖ Cambios aplicados correctamente"
echo "üåê Accede a: https://audacity.alancanto.net"
echo "üì± Prueba en m√≥vil y escritorio para verificar que la URL se mantiene"
